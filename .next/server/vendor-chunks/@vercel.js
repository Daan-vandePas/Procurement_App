"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@vercel";
exports.ids = ["vendor-chunks/@vercel"];
exports.modules = {

/***/ "(rsc)/./node_modules/@vercel/kv/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@vercel/kv/dist/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VercelKV: () => (/* binding */ VercelKV),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ src_default),\n/* harmony export */   kv: () => (/* binding */ kv)\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"(rsc)/./node_modules/@upstash/redis/nodejs.mjs\");\n// src/index.ts\n\nvar _kv = null;\nprocess.env.UPSTASH_DISABLE_TELEMETRY = \"1\";\nvar VercelKV = class extends _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis {\n  // This API is based on https://github.com/redis/node-redis#scan-iterator which is not supported in @upstash/redis\n  /**\n   * Same as `scan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *scanIterator(options) {\n    let cursor = \"0\";\n    let keys;\n    do {\n      [cursor, keys] = await this.scan(cursor, options);\n      for (const key of keys) {\n        yield key;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `hscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *hscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.hscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `sscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *sscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.sscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `zscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *zscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.zscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n};\nfunction createClient(config) {\n  return new VercelKV({\n    // The Next.js team recommends no value or `default` for fetch requests's `cache` option\n    // upstash/redis defaults to `no-store`, so we enforce `default`\n    cache: \"default\",\n    enableAutoPipelining: true,\n    ...config\n  });\n}\nvar src_default = new Proxy(\n  {},\n  {\n    get(target, prop, receiver) {\n      if (prop === \"then\" || prop === \"parse\") {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        console.warn(\n          '\\x1B[33m\"The default export has been moved to a named export and it will be removed in version 1, change to import { kv }\\x1B[0m\"'\n        );\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\nvar kv = new Proxy(\n  {},\n  {\n    get(target, prop) {\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHZlcmNlbC9rdi9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDdUM7QUFDdkM7QUFDQTtBQUNBLDZCQUE2QixpREFBSztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0lBQWdJLElBQUk7QUFDcEk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9jdXJlbWVudC1hcHAvLi9ub2RlX21vZHVsZXMvQHZlcmNlbC9rdi9kaXN0L2luZGV4LmpzPzk2NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG5pbXBvcnQgeyBSZWRpcyB9IGZyb20gXCJAdXBzdGFzaC9yZWRpc1wiO1xudmFyIF9rdiA9IG51bGw7XG5wcm9jZXNzLmVudi5VUFNUQVNIX0RJU0FCTEVfVEVMRU1FVFJZID0gXCIxXCI7XG52YXIgVmVyY2VsS1YgPSBjbGFzcyBleHRlbmRzIFJlZGlzIHtcbiAgLy8gVGhpcyBBUEkgaXMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL3JlZGlzL25vZGUtcmVkaXMjc2Nhbi1pdGVyYXRvciB3aGljaCBpcyBub3Qgc3VwcG9ydGVkIGluIEB1cHN0YXNoL3JlZGlzXG4gIC8qKlxuICAgKiBTYW1lIGFzIGBzY2FuYCBidXQgcmV0dXJucyBhbiBBc3luY0l0ZXJhdG9yIHRvIGFsbG93IGl0ZXJhdGlvbiB2aWEgYGZvciBhd2FpdGAuXG4gICAqL1xuICBhc3luYyAqc2Nhbkl0ZXJhdG9yKG9wdGlvbnMpIHtcbiAgICBsZXQgY3Vyc29yID0gXCIwXCI7XG4gICAgbGV0IGtleXM7XG4gICAgZG8ge1xuICAgICAgW2N1cnNvciwga2V5c10gPSBhd2FpdCB0aGlzLnNjYW4oY3Vyc29yLCBvcHRpb25zKTtcbiAgICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICAgICAgeWllbGQga2V5O1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGN1cnNvciAhPT0gXCIwXCIpO1xuICB9XG4gIC8qKlxuICAgKiBTYW1lIGFzIGBoc2NhbmAgYnV0IHJldHVybnMgYW4gQXN5bmNJdGVyYXRvciB0byBhbGxvdyBpdGVyYXRpb24gdmlhIGBmb3IgYXdhaXRgLlxuICAgKi9cbiAgYXN5bmMgKmhzY2FuSXRlcmF0b3Ioa2V5LCBvcHRpb25zKSB7XG4gICAgbGV0IGN1cnNvciA9IFwiMFwiO1xuICAgIGxldCBpdGVtcztcbiAgICBkbyB7XG4gICAgICBbY3Vyc29yLCBpdGVtc10gPSBhd2FpdCB0aGlzLmhzY2FuKGtleSwgY3Vyc29yLCBvcHRpb25zKTtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykge1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGN1cnNvciAhPT0gXCIwXCIpO1xuICB9XG4gIC8qKlxuICAgKiBTYW1lIGFzIGBzc2NhbmAgYnV0IHJldHVybnMgYW4gQXN5bmNJdGVyYXRvciB0byBhbGxvdyBpdGVyYXRpb24gdmlhIGBmb3IgYXdhaXRgLlxuICAgKi9cbiAgYXN5bmMgKnNzY2FuSXRlcmF0b3Ioa2V5LCBvcHRpb25zKSB7XG4gICAgbGV0IGN1cnNvciA9IFwiMFwiO1xuICAgIGxldCBpdGVtcztcbiAgICBkbyB7XG4gICAgICBbY3Vyc29yLCBpdGVtc10gPSBhd2FpdCB0aGlzLnNzY2FuKGtleSwgY3Vyc29yLCBvcHRpb25zKTtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykge1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGN1cnNvciAhPT0gXCIwXCIpO1xuICB9XG4gIC8qKlxuICAgKiBTYW1lIGFzIGB6c2NhbmAgYnV0IHJldHVybnMgYW4gQXN5bmNJdGVyYXRvciB0byBhbGxvdyBpdGVyYXRpb24gdmlhIGBmb3IgYXdhaXRgLlxuICAgKi9cbiAgYXN5bmMgKnpzY2FuSXRlcmF0b3Ioa2V5LCBvcHRpb25zKSB7XG4gICAgbGV0IGN1cnNvciA9IFwiMFwiO1xuICAgIGxldCBpdGVtcztcbiAgICBkbyB7XG4gICAgICBbY3Vyc29yLCBpdGVtc10gPSBhd2FpdCB0aGlzLnpzY2FuKGtleSwgY3Vyc29yLCBvcHRpb25zKTtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykge1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGN1cnNvciAhPT0gXCIwXCIpO1xuICB9XG59O1xuZnVuY3Rpb24gY3JlYXRlQ2xpZW50KGNvbmZpZykge1xuICByZXR1cm4gbmV3IFZlcmNlbEtWKHtcbiAgICAvLyBUaGUgTmV4dC5qcyB0ZWFtIHJlY29tbWVuZHMgbm8gdmFsdWUgb3IgYGRlZmF1bHRgIGZvciBmZXRjaCByZXF1ZXN0cydzIGBjYWNoZWAgb3B0aW9uXG4gICAgLy8gdXBzdGFzaC9yZWRpcyBkZWZhdWx0cyB0byBgbm8tc3RvcmVgLCBzbyB3ZSBlbmZvcmNlIGBkZWZhdWx0YFxuICAgIGNhY2hlOiBcImRlZmF1bHRcIixcbiAgICBlbmFibGVBdXRvUGlwZWxpbmluZzogdHJ1ZSxcbiAgICAuLi5jb25maWdcbiAgfSk7XG59XG52YXIgc3JjX2RlZmF1bHQgPSBuZXcgUHJveHkoXG4gIHt9LFxuICB7XG4gICAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgIGlmIChwcm9wID09PSBcInRoZW5cIiB8fCBwcm9wID09PSBcInBhcnNlXCIpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgfVxuICAgICAgaWYgKCFfa3YpIHtcbiAgICAgICAgaWYgKCFwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9VUkwgfHwgIXByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1RPS0VOKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgXCJAdmVyY2VsL2t2OiBNaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcyBLVl9SRVNUX0FQSV9VUkwgYW5kIEtWX1JFU1RfQVBJX1RPS0VOXCJcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAnXFx4MUJbMzNtXCJUaGUgZGVmYXVsdCBleHBvcnQgaGFzIGJlZW4gbW92ZWQgdG8gYSBuYW1lZCBleHBvcnQgYW5kIGl0IHdpbGwgYmUgcmVtb3ZlZCBpbiB2ZXJzaW9uIDEsIGNoYW5nZSB0byBpbXBvcnQgeyBrdiB9XFx4MUJbMG1cIidcbiAgICAgICAgKTtcbiAgICAgICAgX2t2ID0gY3JlYXRlQ2xpZW50KHtcbiAgICAgICAgICB1cmw6IHByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1VSTCxcbiAgICAgICAgICB0b2tlbjogcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVE9LRU5cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUmVmbGVjdC5nZXQoX2t2LCBwcm9wKTtcbiAgICB9XG4gIH1cbik7XG52YXIga3YgPSBuZXcgUHJveHkoXG4gIHt9LFxuICB7XG4gICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgaWYgKCFfa3YpIHtcbiAgICAgICAgaWYgKCFwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9VUkwgfHwgIXByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1RPS0VOKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgXCJAdmVyY2VsL2t2OiBNaXNzaW5nIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcyBLVl9SRVNUX0FQSV9VUkwgYW5kIEtWX1JFU1RfQVBJX1RPS0VOXCJcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIF9rdiA9IGNyZWF0ZUNsaWVudCh7XG4gICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9VUkwsXG4gICAgICAgICAgdG9rZW46IHByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1RPS0VOXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0KF9rdiwgcHJvcCk7XG4gICAgfVxuICB9XG4pO1xuZXhwb3J0IHtcbiAgVmVyY2VsS1YsXG4gIGNyZWF0ZUNsaWVudCxcbiAgc3JjX2RlZmF1bHQgYXMgZGVmYXVsdCxcbiAga3Zcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@vercel/kv/dist/index.js\n");

/***/ })

};
;